/*
==================================
     BEFORE TO RUN THIS SCRIPT
  PLEASE FOLLOW THE STEPS BELOW!
==================================
This script must be run by a DBA with the SYS user for every RAPIDSnapshot users needed to be created.

Search/Replace the variables inside this script by the desired values:

Example:
##USER_NAME## => XX_RS_USER1
##PASSWORD## => XX_RS_USER1
##DBF## => /data/erpp/oracle/ERPP/db/apps_st/data/XX_RS_USER1.dbf
##TABLESPACE_SIZE_IN_GB## => 1
##TABLESPACE_AUTO_EXTEND## => ON

==================================
           UNINSTALL
==================================
Just drop the desired user and tablespace:

DROP USER ##USER_NAME## CASCADE;
DROP TABLESPACE ##USER_NAME## INCLUDING CONTENTS AND DATAFILES;

==================================
          TROUBLESHOOTING
==================================
Please visit our online support at:

https://www.rapid4cloud.com/support/

*/
create tablespace ##USER_NAME## datafile '##DBF##' SIZE ##TABLESPACE_SIZE_IN_GB##G REUSE AUTOEXTEND ##TABLESPACE_AUTO_EXTEND##;
/
CREATE USER ##USER_NAME## IDENTIFIED BY "##PASSWORD##" DEFAULT TABLESPACE "##USER_NAME##" TEMPORARY TABLESPACE "TEMP" QUOTA UNLIMITED ON "##USER_NAME##";
/
GRANT CREATE SESSION TO ##USER_NAME##;
/
GRANT CREATE PROCEDURE TO ##USER_NAME##;
/
GRANT CREATE SEQUENCE TO ##USER_NAME##;
/
GRANT CREATE TABLE to ##USER_NAME##;
/
GRANT SELECT ON sys.dba_objects TO ##USER_NAME##;
/
grant select on SYS.dba_data_files to ##USER_NAME##;
/
grant select on SYS.dba_free_space to ##USER_NAME##;
/
/*
This privilege is needed in order to call various APPS procedures, functions and packages used in our SQL queries.
*/
GRANT EXECUTE ANY PROCEDURE TO ##USER_NAME##;
/
/*
This privilege is needed in order to read from all APPS tables, views, synonyms in our SQL queries.
*/
GRANT SELECT ANY TABLE TO ##USER_NAME##;
/
/*
This privilege is needed in order to read from all APPS sequences in our SQL queries.
*/
GRANT SELECT ANY SEQUENCE TO ##USER_NAME##;
/
/*
This will create the DB structures necessary for RapidSnapshot to function correctly.
*/
CREATE TABLE ##USER_NAME##.SNAPSHOT
(
  ID          NUMBER          NOT NULL,
  NAME		  VARCHAR(255)	  NOT NULL,
  DESCRIPTION VARCHAR(2000)	  NULL,
  IS_DELETED  VARCHAR2(1 CHAR)         DEFAULT 'N' NOT NULL,
  CREATED_ON  TIMESTAMP       DEFAULT SYSTIMESTAMP NOT NULL,
  OS_USER_NAME  VARCHAR(255)	          not null,
  CLIENT_HOSTNAME  VARCHAR(255)	      ,
  CREATION_MODE		  varchar2(1 char) default 'A' not null,
  COMPLETED_ON  TIMESTAMP,
  STATUS  VARCHAR(1)	,
  IS_CONVERSION  VARCHAR(1)	,
  USER_ID  NUMBER,
  TEMPLATE_NAME VARCHAR2(1000),
  TIME_LIMIT  NUMBER,
  PRIMARY KEY (ID,NAME)
);
/
CREATE INDEX ##USER_NAME##.SNAPSHOT_ID on ##USER_NAME##.SNAPSHOT (id);
/
CREATE INDEX ##USER_NAME##.SNAPSHOT_NAME ON ##USER_NAME##.SNAPSHOT (NAME);
/
CREATE INDEX ##USER_NAME##.SNAPSHOT_STATUS ON ##USER_NAME##.SNAPSHOT (status);
/
CREATE INDEX ##USER_NAME##.SNAPSHOT_ID_ST ON ##USER_NAME##.SNAPSHOT (id,status);
/
CREATE INDEX ##USER_NAME##.SNAPSHOT_IS_DEL ON ##USER_NAME##.SNAPSHOT (IS_DELETED);
/
CREATE TABLE ##USER_NAME##.INVENTORY
(
  ID          NUMBER          NOT NULL,
  NAME		  VARCHAR2(255)	  NOT NULL,
  IS_EXECUTABLE  VARCHAR(1)	DEFAULT 'Y',
  IS_LISTABLE    VARCHAR(1)	DEFAULT 'Y',
  primary key (id, NAME)
);
/
CREATE INDEX ##USER_NAME##.INVENTORY_ID on ##USER_NAME##.INVENTORY (id);
/
CREATE INDEX ##USER_NAME##.INVENTORY_NAME ON ##USER_NAME##.INVENTORY (NAME);
/
CREATE TABLE ##USER_NAME##.INVENTORY_TO_SNAPSHOT
(
  INVENTORY_ID NUMBER NOT NULL,
  STATUS  VARCHAR(1)	,
  MSG  VARCHAR(4000)	,
  SNAPSHOT_ID NUMBER	NOT NULL,
  EXECUTION_TIME_STRING VARCHAR2(255),
  EXECUTION_RAW_TIME NUMBER,
  TOTAL_RECORD NUMBER,
  CREATED_ON  TIMESTAMP,
  COMPLETED_ON  TIMESTAMP,
  primary key (INVENTORY_ID, SNAPSHOT_ID)
);
/
CREATE INDEX ##USER_NAME##.ISN_INVENTORY_ID ON ##USER_NAME##.INVENTORY_TO_SNAPSHOT (INVENTORY_ID);
/
CREATE INDEX ##USER_NAME##.ISN_SNAPSHOT_ID ON ##USER_NAME##.INVENTORY_TO_SNAPSHOT (SNAPSHOT_ID);
/
CREATE INDEX ##USER_NAME##.ISN_STATUS ON ##USER_NAME##.INVENTORY_TO_SNAPSHOT (status);
/
CREATE TABLE ##USER_NAME##.VERSION_KB
(
  VERSION_TEXT  VARCHAR(255)	  NOT NULL,
  KB_FILE_NAME VARCHAR(2000)	  NOT NULL
);
/
CREATE SEQUENCE ##USER_NAME##.SNAPSHOT_ID
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
/ 
CREATE SEQUENCE ##USER_NAME##.INVENTORY_ID
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
/
CREATE SEQUENCE ##USER_NAME##.COMPARISON_ID
  MAXVALUE 999999999999999999999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;
/
CREATE TABLE ##USER_NAME##.USERS
(
  ID          NUMBER          NOT NULL,
  LOGIN_NAME		  VARCHAR(50)	  NOT NULL,
  PASSWORD		  VARCHAR(1000)	  NOT NULL,
  FULL_NAME VARCHAR(2000)	  NULL,
  IS_DELETED  VARCHAR2(1 CHAR)         DEFAULT 'N' NOT NULL,
  CREATED_ON  TIMESTAMP       DEFAULT SYSTIMESTAMP NOT NULL,
  SNAPSHOT_CREATION  varchar2(1 char) default 'N' not null,
  IS_ENABLED  varchar2(1 char) default 'N' not null,
  IS_MANAGER  varchar2(1 char) default 'N' not null,
  IS_ENABLED_WORKERS varchar2(1 char) default 'N' not null,
  IS_ENABLED_CONNECT_FOLDR varchar2(1 char) default 'N' not null,
  IS_ENABLED_DOWNLD_FOLDR varchar2(1 char) default 'N' not null,
  IS_ENABLED_TMP_FOLDR varchar2(1 char) default 'N' not null,
  IS_ENABLED_SNP_PRFX varchar2(1 char) default 'N' not null,
  IS_ENABLED_RESET_OPTN varchar2(1 char) default 'N' not null,
  IS_ENABLED_DELETE_OPTION varchar2(1 char) default 'N' not null,
  IS_ENABLED_TOTAL_DETAIL_OPTION varchar2(1 char) default 'N' not null,
  PREF_OVERRIDES_EXISTS varchar2(1) DEFAULT 'Y',
  PREF_DEFAULT_PARALLEL_WORKERS varchar2(5),
  PREF_CONNECTIONS_FOLDER_LOC varchar2(2000),
  PREF_DOWNLOAD_FOLDER_LOCATION varchar2(2000),
  PREF_TEMPLATE_FOLDER_LOCATION varchar2(2000),
  PREF_SNAPSHOT_PREFIX_NAME varchar2(2000),
  PREF_DOWNLOAD_FORMAT varchar2(5),
  PREF_SNAPSHOT_DELETE_OPTION varchar2(15),
  PREF_INC_SOFT_DELETED_OPTION varchar2(1),
  PREF_DISPLAY_UNSUPPORTED_INV varchar2(1),
  PREF_DISPLAY_TOTAL_DETAILS varchar2(1),
  PREF_SHOW_HELPER_BALLOONS varchar2(1),
  PREF_BR100_VERTICAL_WAY varchar2(1),
  PREF_SEEDED_USERS_DEFINITION varchar2(2000),
  PRIMARY KEY (LOGIN_NAME,IS_DELETED)
);
/
CREATE SEQUENCE ##USER_NAME##.USER_ID_SEQ
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  NOORDER;
/ 
CREATE INDEX ##USER_NAME##.USERS_ID on ##USER_NAME##.USERS (id);
/
DECLARE
BEGIN
	-- Required by 11G DB for example EBS 12.2.4 BUT this will fail on older DB versions.
	EXECUTE IMMEDIATE 'alter user ##USER_NAME## enable editions';
EXCEPTION
When Others Then
   NULL;
End;
/

CREATE TABLE ##USER_NAME##.DUMMY_FND_SESSIONS
(
	SESSION_ID			NUMBER			NOT NULL,
	EFFECTIVE_DATE		DATE			NOT NULL
);
/

INSERT INTO ##USER_NAME##.DUMMY_FND_SESSIONS (SESSION_ID, EFFECTIVE_DATE) VALUES(USERENV('SESSIONID'), ADD_MONTHS(TO_DATE(TRUNC(SYSDATE)), 120)-1);
/